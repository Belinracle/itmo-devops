name: CI Build
on:
  push:
    branches:
      - '**'
jobs:
  backendBuild:
    name: Maven backend Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Java 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'maven'
      - name: Build with Maven
        working-directory: ./backend
        run: mvn compile
  backendTest:
    name: Maven Test
    runs-on: ubuntu-latest
    env:
      TG_BOT_TOKEN: 'test'
      TG_CHAT_ID: 'test'
    steps:
      - uses: actions/checkout@v3
      - name: Setup Java 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'maven'
      - name: Test with maven
        working-directory: ./backend
        run: mvn test
  frontendBuild:
    name: Frontend Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - run: npm ci
      - run: npm run build
  frontendTest:
    name: Frontend Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - run: npm ci
      - run: npm test
  sonarqubeAnalysis:
    name: SonarQube Analysis
    needs: [ backendTest ]  # Запускается только если тесты прошли
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Чтобы работал анализ истории

      - name: Setup Java 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'maven'

      - name: Cache SonarQube packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Run SonarQube analysis
        working-directory: ./backend
        run: |
          mvn sonar:sonar \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.host.url=http://192.168.49.2:40000 \
            -Dsonar.source.encoding=UTF-8
  dockerBuildAndPush:
    name: Build and Push to GitHub Container Registry and deploy
    runs-on: ubuntu-latest
    needs: [ backendBuild, frontendBuild ]
    permissions:
      packages: write  # Нужно для публикации в GHCR
      contents: read   # Чтобы читать репозиторий
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ghcr.io/belinracle/itmo-devops/devops-backend:latest

      - name: Build and push Frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ghcr.io/belinracle/itmo-devops/devops-frontend:latest